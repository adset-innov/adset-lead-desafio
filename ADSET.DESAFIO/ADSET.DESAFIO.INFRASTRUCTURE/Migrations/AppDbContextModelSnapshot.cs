// <auto-generated />
using ADSET.DESAFIO.INFRASTRUCTURE.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADSET.DESAFIO.INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("color");

                    b.Property<int>("Km")
                        .HasColumnType("int")
                        .HasColumnName("km");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("plate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("tb_car");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarOptional", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    b.Property<int>("OptionalId")
                        .HasColumnType("int")
                        .HasColumnName("optional_id");

                    b.HasKey("CarId", "OptionalId");

                    b.HasIndex("OptionalId");

                    b.ToTable("tb_car_optional");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("tb_car_photo");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarPortalPackage", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    b.Property<int>("Portal")
                        .HasColumnType("int")
                        .HasColumnName("portal");

                    b.Property<int>("Package")
                        .HasColumnType("int")
                        .HasColumnName("package");

                    b.HasKey("CarId", "Portal");

                    b.ToTable("tb_car_portal_package");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.Optional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("tb_optional");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarOptional", b =>
                {
                    b.HasOne("ADSET.DESAFIO.DOMAIN.Entities.Car", "Car")
                        .WithMany("Optionals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADSET.DESAFIO.DOMAIN.Entities.Optional", "Optional")
                        .WithMany("CarOptionals")
                        .HasForeignKey("OptionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Optional");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarPhoto", b =>
                {
                    b.HasOne("ADSET.DESAFIO.DOMAIN.Entities.Car", "Car")
                        .WithMany("Photos")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.CarPortalPackage", b =>
                {
                    b.HasOne("ADSET.DESAFIO.DOMAIN.Entities.Car", "Car")
                        .WithMany("PortalPackages")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.Car", b =>
                {
                    b.Navigation("Optionals");

                    b.Navigation("Photos");

                    b.Navigation("PortalPackages");
                });

            modelBuilder.Entity("ADSET.DESAFIO.DOMAIN.Entities.Optional", b =>
                {
                    b.Navigation("CarOptionals");
                });
#pragma warning restore 612, 618
        }
    }
}
